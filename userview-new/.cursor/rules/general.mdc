---
description: 
globs: 
alwaysApply: true
---
# 开发规则

## 项目结构规则

- 采用前后端分离架构
- 前端使用Vue.js + Element UI
- 支持Docker容器化部署


## 前端开发规则

- 组件命名规范：
  - 页面组件：使用View后缀（如LoginView.vue）
  - 公共组件：使用描述性名称（如MainMenu.vue）
- 目录结构规范：
  - 页面组件放在views目录
  - 公共组件放在components目录
  - 服务层代码放在services目录
  - 状态管理代码放在store目录
- 路由规范：
  - 使用Vue Router进行路由管理
  - 需要认证的路由添加meta: { requiresAuth: true }
- 状态管理：
  - 使用Vuex进行状态管理
  - token和用户信息存储在store中


## 安全规则

- 密码存储：不在前端存储明文密码
- API认证：所有需要认证的API添加[Authorize]特性
- 敏感配置：数据库连接字符串和JWT密钥等敏感信息放在配置文件中
- CORS配置：允许跨域请求


## 代码风格规则

- 前端：
  - 使用ESLint进行代码规范检查
  - 使用Element UI组件库
  - 使用Vue.js官方推荐的代码风格


## 部署规则

- 支持Docker容器化部署
- 使用多阶段构建优化Docker镜像
- 开发环境和生产环境使用不同的配置文件
- 数据库备份文件放在Docker目录下


## 版本控制规则

- 使用Git进行版本控制
- 使用.gitignore排除不需要版本控制的文件
- 使用.dockerignore排除不需要构建到Docker镜像的文件


## 错误处理规则

- 前端：
  - 使用Element UI的消息提示组件显示错误信息
  - 使用axios拦截器处理HTTP错误


## 数据验证规则

- 前端：
  - 使用Element UI的表单验证
  - 使用自定义验证规则


## 性能优化规则

- 使用异步操作处理耗时任务
- 使用缓存减少数据库访问
- 使用懒加载优化路由
- 使用CDN加速静态资源



